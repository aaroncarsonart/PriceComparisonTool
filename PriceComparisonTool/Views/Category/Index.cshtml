@model PagedList.IPagedList<PriceComparisonTool.Models.Category>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Category";
}

<h2>Category</h2>
<div class="row">
    <div class="col-md-12">
        <p>
            <em>Categories</em> are used to group different 
            types of <em>Products</em> and are helpful to
            <em>Stores</em> so they can place like products
            together to make them easier for the customer
            to locate while shopping. <em>Price Comparsion Tool</em>
            makes use of <em>Categories</em> for exactly the same
            reason.
        </p>
        <p>
            To view the Categories, Select the <em>"Category"</em> link from
            the drop-down at the top of the page.
        </p>
    </div>
</div>
<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Category", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Category Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
